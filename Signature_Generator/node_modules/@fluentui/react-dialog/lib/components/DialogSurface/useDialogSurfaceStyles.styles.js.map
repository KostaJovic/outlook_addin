{"version":3,"names":["__resetStyles","__styles","mergeClasses","shorthands","tokens","createFocusOutlineStyle","MEDIA_QUERY_BREAKPOINT_SELECTOR","SURFACE_BORDER_WIDTH","SURFACE_PADDING","dialogSurfaceClassNames","root","backdrop","useRootResetStyles","r","s","useBackdropStyles","nestedDialogBackdrop","De3pzq","d","useBackdropResetStyles","useDialogSurfaceStyles_unstable","state","surfaceResetStyles","styles","backdropResetStyles","className","isNestedDialog"],"sources":["useDialogSurfaceStyles.styles.js"],"sourcesContent":["import { makeResetStyles, makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { MEDIA_QUERY_BREAKPOINT_SELECTOR, SURFACE_BORDER_WIDTH, SURFACE_PADDING } from '../../contexts';\nexport const dialogSurfaceClassNames = {\n    root: 'fui-DialogSurface',\n    backdrop: 'fui-DialogSurface__backdrop'\n};\n/**\n * Styles for the root slot\n */ const useRootResetStyles = makeResetStyles({\n    ...createFocusOutlineStyle(),\n    ...shorthands.inset(0),\n    ...shorthands.padding(0),\n    ...shorthands.padding(SURFACE_PADDING),\n    ...shorthands.margin('auto'),\n    ...shorthands.borderStyle('none'),\n    ...shorthands.overflow('unset'),\n    ...shorthands.border(SURFACE_BORDER_WIDTH, 'solid', tokens.colorTransparentStroke),\n    ...shorthands.borderRadius(tokens.borderRadiusXLarge),\n    contain: 'content',\n    display: 'block',\n    userSelect: 'unset',\n    visibility: 'unset',\n    position: 'fixed',\n    height: 'fit-content',\n    maxWidth: '600px',\n    maxHeight: '100vh',\n    boxSizing: 'border-box',\n    boxShadow: tokens.shadow64,\n    backgroundColor: tokens.colorNeutralBackground1,\n    color: tokens.colorNeutralForeground1,\n    [MEDIA_QUERY_BREAKPOINT_SELECTOR]: {\n        maxWidth: '100vw'\n    }\n});\nconst useBackdropStyles = makeStyles({\n    nestedDialogBackdrop: {\n        backgroundColor: tokens.colorTransparentBackground\n    }\n});\n/**\n * Styles for the backdrop slot\n */ const useBackdropResetStyles = makeResetStyles({\n    ...shorthands.inset('0px'),\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    position: 'fixed'\n});\n/**\n * Apply styling to the DialogSurface slots based on the state\n */ export const useDialogSurfaceStyles_unstable = (state)=>{\n    const surfaceResetStyles = useRootResetStyles();\n    const styles = useBackdropStyles();\n    const backdropResetStyles = useBackdropResetStyles();\n    state.root.className = mergeClasses(dialogSurfaceClassNames.root, surfaceResetStyles, state.root.className);\n    if (state.backdrop) {\n        state.backdrop.className = mergeClasses(dialogSurfaceClassNames.backdrop, backdropResetStyles, state.isNestedDialog && styles.nestedDialogBackdrop, state.backdrop.className);\n    }\n    return state;\n};\n"],"mappings":"AAAA,SAAAA,aAAA,EAAAC,QAAA,EAAsCC,YAAY,EAAEC,UAAU,QAAQ,gBAAgB;AACtF,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,uBAAuB,QAAQ,yBAAyB;AACjE,SAASC,+BAA+B,EAAEC,oBAAoB,EAAEC,eAAe,QAAQ,gBAAgB;AACvG,OAAO,MAAMC,uBAAuB,GAAG;EACnCC,IAAI,EAAE,mBAAmB;EACzBC,QAAQ,EAAE;AACd,CAAC;AACD;AACA;AACA;AAAI,MAAMC,kBAAkB,gBAAGZ,aAAA;EAAAa,CAAA;EAAAC,CAAA;AAAA,CAyB9B,CAAC;AACF,MAAMC,iBAAiB,gBAAGd,QAAA;EAAAe,oBAAA;IAAAC,MAAA;EAAA;AAAA;EAAAC,CAAA;AAAA,CAIzB,CAAC;AACF;AACA;AACA;AAAI,MAAMC,sBAAsB,gBAAGnB,aAAA,uOAIlC,CAAC;AACF;AACA;AACA;AAAI,OAAO,MAAMoB,+BAA+B,GAAIC,KAAK,IAAG;EACxD,MAAMC,kBAAkB,GAAGV,kBAAkB,CAAC,CAAC;EAC/C,MAAMW,MAAM,GAAGR,iBAAiB,CAAC,CAAC;EAClC,MAAMS,mBAAmB,GAAGL,sBAAsB,CAAC,CAAC;EACpDE,KAAK,CAACX,IAAI,CAACe,SAAS,GAAGvB,YAAY,CAACO,uBAAuB,CAACC,IAAI,EAAEY,kBAAkB,EAAED,KAAK,CAACX,IAAI,CAACe,SAAS,CAAC;EAC3G,IAAIJ,KAAK,CAACV,QAAQ,EAAE;IAChBU,KAAK,CAACV,QAAQ,CAACc,SAAS,GAAGvB,YAAY,CAACO,uBAAuB,CAACE,QAAQ,EAAEa,mBAAmB,EAAEH,KAAK,CAACK,cAAc,IAAIH,MAAM,CAACP,oBAAoB,EAAEK,KAAK,CAACV,QAAQ,CAACc,SAAS,CAAC;EACjL;EACA,OAAOJ,KAAK;AAChB,CAAC"}